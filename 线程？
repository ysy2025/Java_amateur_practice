import java.lang.*;

public class MyThread {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		new ThreadTest().start();
		
		for(int i = 0; i < 5; i++)
		{
			System.out.println("main is running");
			try {
				Thread.sleep(1000);
			}catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	}

}
class ThreadTest extends Thread
{
	public void run()
	{
		for(int i = 0; i < 5; i++)
		{
//			System.out.println("the number of i is: "+i);
			System.out.println("ThreadTest is running");
		}
		try{
			Thread.sleep(1000);
		}catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	public void start() {
		// TODO Auto-generated method stub
//		for(int i = 0; i < 5; i++)
//		{
////			System.out.println("the number of i is: "+i);
		this.run();
//		}
		try{
//			super.wait(1000);
			Thread.sleep(1000);
		}catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
}
//和java从入门到精通的说法并不相同，结果不是交替，而是一个线程结束才开始另一个线层
